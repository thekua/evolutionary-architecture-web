---
title: Make Sure New Really Replaces Old
description: PenultimateWidgets legacy accounting system grew over many years, with arcane business rules scattered in many places--no one really understands how everything works anymore. They have been working for several years on replacing the accounting system, but worry that the new system cannot replicate the byzantine business rules that their clients have come to depend upon.
categories: holistic, triggered
requirements:
    - make sure all accounting transactions for invoicing, discounting, and incentives show parity in results across the old and new system
context:
    - the legacy accounting system has a few spotty unit tests but no good coverage and no other testing. The unit test that exist are pootly maintained and unreliable.
solution:
    - For each discrete function covered under this rule, create a functional test that treats each system (old and new) as a black box, looking only at the results of each. 
    - Provision the old system (perhaps using the Legacy in the Box pattern) and new in an integration testing environment and run the functional replacement tests.
    - Stories are not marked complete until the functional tests run.

